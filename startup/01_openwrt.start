#!/bin/bash
set -eu -o pipefail

DEBUG="${DEBUG:-}"
PHY_ERR=""

if [ -n "${DEBUG}" ]; then
	set -x
fi

if [ -z "$(docker network ls  --filter 'name=openwrt-eth0' --format '{{ .ID }}')" ]; then
	docker network create --internal openwrt-eth0
fi

if [ -z "$(docker network ls  --filter 'name=openwrt-eth1' --format '{{ .ID }}')" ]; then
	docker network create --internal openwrt-eth1
fi

if [ -n "$(docker ps --filter 'name=openwrt' --format '{{ .ID }}' )" ]; then
	echo "Found existing openwrt container... QUITTING" 
	exit 1	
fi

if [ -f "/run/netns/openwrt" ]; then
	echo "Stale namespace found at /run/netns/openwrt"
	echo "Removing stale namespace"
	ip netns delete openwrt
fi

for phy_num in $(seq 0 9); do
	if [ ! -L /sys/class/ieee80211/phy${phy_num} ]; then
		echo "WARNING: phy${phy_num} is not found in /sys/class/ieee80211"
		PHY_ERR="true"
	fi

	if [ ! -d /sys/class/ieee80211/phy${phy_num}/device/net ]; then
		echo "WARNING: phy${phy_num} is not mapped to a WLAN interface"
		PHY_ERR="true"
	fi
done

if [ -n "${PHY_ERR}" ]; then
	echo "Fixing phy interfaces with ~/fix_phy.sh"
	FIX_PHY=1 ./fixphy.sh
fi

docker create -it --rm --network openwrt-eth0 --name openwrt \
	--privileged --userns host \
	-v /var/wctf/openwrt/logs:/var/log \
  -v /var/wctf/openwrt/config:/etc/config:ro \
	quay.io/wctf/openwrt:defcon2020 /sbin/init

docker network connect openwrt-eth1 openwrt

docker start openwrt

./namespace_fixup.sh openwrt

openwrtpid=$(docker inspect --format "{{ .State.Pid }}" openwrt)
#Pass 10 phyâ€™s into the openwrt namespace with
iw phy phy0 set netns ${openwrtpid}
iw phy phy1 set netns ${openwrtpid}
iw phy phy2 set netns ${openwrtpid}
iw phy phy3 set netns ${openwrtpid}
iw phy phy4 set netns ${openwrtpid}
iw phy phy5 set netns ${openwrtpid}
iw phy phy6 set netns ${openwrtpid}
iw phy phy7 set netns ${openwrtpid}
iw phy phy8 set netns ${openwrtpid}
iw phy phy9 set netns ${openwrtpid}


#docker exec -it openwrt -- wifi down && wifi up
