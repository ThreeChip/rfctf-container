#!/bin/sh
set -eu
DEBUG="${DEBUG:-}"
PHY_ERR=""

if [ -n "${DEBUG}" ]; then
	set -x
fi

# shellcheck disable=SC2153
for CONTAINER_NETWORK in ${CONTAINER_NETWORKS}; do
  if [ -z "$(docker network ls  --filter name="${CONTAINER_NETWORK}" --format '{{ .ID }}')" ]; then
    if [ "${CONTAINER_NETWORK}" = "contestant" ]; then
      docker network create --driver=bridge --subnet 192.168.232.0/27 "${CONTAINER_NETWORK}"
    else
      docker network create --internal "${CONTAINER_NETWORK}"
    fi
  fi
done

if [ -n "$(docker ps --filter name="${CONTAINER_NAME}" --format '{{ .ID }}' )" ]; then
	echo "Found existing ${CONTAINER_NAME} container... QUITTING"
	exit 1
fi

if [ -f "/run/netns/${CONTAINER_NAME}" ]; then
	echo "Stale namespace found at /run/netns/${CONTAINER_NAME}"
	echo "Removing stale namespace"
	ip netns delete "${CONTAINER_NAME}"
fi

for phy_num in ${CONTAINER_PHYS}; do
	if [ ! -L "/sys/class/ieee80211/phy${phy_num}" ]; then
		echo "WARNING: phy${phy_num} is not found in /sys/class/ieee80211"
		PHY_ERR="true"
	fi

	if [ ! -d "/sys/class/ieee80211/phy${phy_num}/device/net" ]; then
		echo "WARNING: phy${phy_num} is not mapped to a WLAN interface"
		PHY_ERR="true"
	fi
done

if [ -n "${PHY_ERR}" ]; then
	echo "Fixing phy interfaces with ./fix_phy.sh"
	FIX_PHY=1 "$(dirname "${0}")"/fixphy.sh
fi

[ ! -d "/var/log/rfhs-rfctf/${CONTAINER_NAME}" ] && mkdir -p "/var/log/rfhs-rfctf/${CONTAINER_NAME}"
[ ! -d "/var/cache/rfhs-rfctf/shared_persistent_storage" ] && mkdir -p "/var/cache/rfhs-rfctf/shared_persistent_storage"

if [ "${CONTAINER_NETWORKS}" = "contestant" ]; then
  # shellcheck disable=SC2046
  docker run -p "${SSH_PORT}":22 -p "${VNC_PORT}":8080 --rm -d --net=contestant --name "${CONTAINER_NAME}" \
    --tmpfs /run:mode=0755,nosuid,nodev,nr_inodes=800k,size=20%,strictatime \
    --cap-add net_raw --cap-add net_admin --cap-add=dac_read_search \
    --security-opt seccomp=unconfined \
    $([ -f '/var/wctf/contestant/key/authorized_keys' ] && printf -- '-v /var/wctf/contestant/key/authorized_keys:/root/.ssh/authorized_keys\n') \
    -v /var/cache/rfhs-rfctf/shared_persistent_storage:/root/shared_persistent_storage \
    -v "/var/log/rfhs-rfctf/${CONTAINER_NAME}":/var/log \
    "${CONTAINER_IMAGE}"
else
  if [ "${CONTAINER_NAME}" = "openwrt" ]; then
    # shellcheck disable=SC2046
    docker create -it --rm --network openwrt-eth0 --name "${CONTAINER_NAME}" \
      --tmpfs /run:mode=0755,nosuid,nodev,nr_inodes=800k,size=20%,strictatime \
      --cap-add net_raw --cap-add net_admin \
      -v /var/cache/rfhs-rfctf/shared_persistent_storage:/root/shared_persistent_storage \
      $(if [ -d '/root/wctf-restricted' ]; then find '/root/wctf-restricted/wifi/openwrt/airkraken/files' -type f -exec printf "-v %s:%s\n" "{}" "{}" \; | sed 's#:/root/wctf-restricted/wifi/openwrt/airkraken/files#:#;s#$#:ro#'; fi) \
      $(if [ -d '/root/wctf-restricted' ]; then find '/root/wctf-restricted/wifi/openwrt/airkraken/files' -type l -exec printf "-v %s:%s\n" "{}" "{}" \; | sed 's#:/root/wctf-restricted/wifi/openwrt/airkraken/files#:#;s#$#:ro#'; fi) \
      -v "/var/log/rfhs-rfctf/${CONTAINER_NAME}":/var/log \
      "${CONTAINER_IMAGE}"
      #--privileged --userns host \

    docker network connect openwrt-eth1 "${CONTAINER_NAME}"

    docker start "${CONTAINER_NAME}"
  else
    if [ "${CONTAINER_NAME}" = "rfctf-client" ]; then
      # shellcheck disable=SC2046
      docker run -d -it --rm --network none --name "${CONTAINER_NAME}" \
        --tmpfs /run:mode=0755,nosuid,nodev,nr_inodes=800k,size=20%,strictatime \
        --privileged --userns host \
        $([ -d '/root/wctf-restricted' ] && printf -- '-v /root/wctf-restricted/wifi/leeloodallasmultipass/config:/root/leeloodallasmultipass/config\n') \
        $([ -d '/root/wctf-restricted' ] && printf -- '-v /root/wctf-restricted/wifi/leeloodallasmultipass/helpers:/root/leeloodallasmultipass/helpers\n') \
        $([ -d '/root/wctf-restricted' ] && printf -- '-v /root/wctf-restricted/wifi/leeloodallasmultipass/ldm.conf:/root/leeloodallasmultipass/ldm.conf\n') \
        -v /var/cache/rfhs-rfctf/shared_persistent_storage:/root/shared_persistent_storage \
        -v "/var/log/rfhs-rfctf/${CONTAINER_NAME}":/var/log \
        "${CONTAINER_IMAGE}"
        #this still doesn't work, I think dhcpcd can't handle it
        #--cap-add net_raw --cap-add net_admin --cap-add=sys_admin --security-opt seccomp=unconfined \
    fi
    #challengectl isn't public yet so this won't work for you
    if [ "${CONTAINER_NAME}" = "rfctf-sdr" ]; then
      docker run -d -it --rm --network none --name "${CONTAINER_NAME}" \
        --tmpfs /run:mode=0755,nosuid,nodev,nr_inodes=800k,size=20%,strictatime \
        --privileged --userns host \
        -v /dev:/dev \
        -v /root/challengectl:/root/challengectl \
        -v /var/cache/rfhs-rfctf/shared_persistent_storage:/root/shared_persistent_storage \
        -v "/var/log/rfhs-rfctf/${CONTAINER_NAME}":/var/log \
        "${CONTAINER_IMAGE}" ./challengectl.py shmoo22_flags.csv devices.txt.rfhs
    fi
  fi
fi

"$(dirname "${0}")"/namespace_fixup.sh "${CONTAINER_NAME}"

clientpid=$(docker inspect --format "{{ .State.Pid }}" "${CONTAINER_NAME}")
for phy_num in ${CONTAINER_PHYS}; do
  while true; do
    if iw phy "phy${phy_num}" info > /dev/null 2>&1; then
      printf "Found phy%s, moving it into %s\n" "${phy_num}" "${CONTAINER_NAME}"
      break
    fi
    printf "Unable to find phy%s, waiting...\n" "${phy_num}"
    sleep 1
  done
	iw phy "phy${phy_num}" set netns "${clientpid}"
	#iw phy "phy${phy_num}" set netns name "${CONTAINER_NAME}"
done
