#!/bin/bash -x
set -eu -o pipefail
DEBUG="${DEBUG:-}"
PHY_ERR=""

if [ -n "${DEBUG}" ]; then
	set -x
fi

for CONTAINER_NETWORK in ${CONTAINER_NETWORKS}; do
  if [ -z "$(docker network ls  --filter name=${CONTAINER_NETWORK} --format '{{ .ID }}')" ]; then
    if [ "${CONTAINER_NETWORK}" = "contestant" ]; then
      docker network create --driver=bridge --subnet 192.168.232.0/27 "${CONTAINER_NETWORK}"
    else
      docker network create --internal "${CONTAINER_NETWORK}"
    fi
  fi
done

if [ -n "$(docker ps --filter name=${CONTAINER_NAME} --format '{{ .ID }}' )" ]; then
	echo "Found existing ${CONTAINER_NAME} container... QUITTING"
	exit 1
fi

if [ -f "/run/netns/${CONTAINER_NAME}" ]; then
	echo "Stale namespace found at /run/netns/${CONTAINER_NAME}"
	echo "Removing stale namespace"
	ip netns delete "${CONTAINER_NAME}"
fi

for phy_num in ${CONTAINER_PHYS}; do
	if [ ! -L "/sys/class/ieee80211/phy${phy_num}" ]; then
		echo "WARNING: phy${phy_num} is not found in /sys/class/ieee80211"
		PHY_ERR="true"
	fi

	if [ ! -d "/sys/class/ieee80211/phy${phy_num}/device/net" ]; then
		echo "WARNING: phy${phy_num} is not mapped to a WLAN interface"
		PHY_ERR="true"
	fi
done

if [ -n "${PHY_ERR}" ]; then
	echo "Fixing phy interfaces with ./fix_phy.sh"
	FIX_PHY=1 ./fixphy.sh
fi

if [ "${CONTAINER_NETWORKS}" = "contestant" ]; then
  docker run -p "${SSH_PORT}":22 -p "${VNC_PORT}":8080 --rm -d --net=contestant --name "${CONTAINER_NAME}" \
    --cap-add net_raw --cap-add net_admin --cap-add=dac_read_search \
    -v /var/wctf/contestant/key/authorized_keys:/root/.ssh/authorized_keys \
    -v /var/wctf/shared_persistent_storage:/root/shared_persistent_storage \
    -v /var/wctf/contestant/"${CONTAINER_NAME}"/logs:/var/log  "${CONTAINER_IMAGE}"
else
  if [ "${CONTAINER_NAME}" = "openwrt" ]; then
    docker create -it --rm --network openwrt-eth0 --name "${CONTAINER_NAME}" \
      --privileged --userns host \
      -v /var/wctf/openwrt/logs:/var/log \
      -v /var/wctf/openwrt/config:/etc/config:ro \
      "${CONTAINER_IMAGE}"

    docker network connect openwrt-eth1 "${CONTAINER_NAME}"

    docker start "${CONTAINER_NAME}"
  else
    if [ "${CONTAINER_NAME}" = "rfctf-client" ]; then
      docker run -d -it --rm --network none --name "${CONTAINER_NAME}" \
        --privileged --userns host  \
        -v /var/wctf/client/config/wifi/liludallasmultipass:/home \
        --workdir /home \
        --cap-add net_admin "${CONTAINER_IMAGE}" /home/ldm
    fi
  fi
fi

./namespace_fixup.sh "${CONTAINER_NAME}"

clientpid=$(docker inspect --format "{{ .State.Pid }}" "${CONTAINER_NAME}")
for phy_num in ${CONTAINER_PHYS}; do
  while true; do
    if iw phy "phy${phy_num}" info > /dev/null 2>&1; then
      printf "Found phy${phy_num}, moving it into ${CONTAINER_NAME}\n"
      break
    fi
    printf "Unable to find phy${phy_num}, waiting...\n"
    sleep 1
  done
	iw phy "phy${phy_num}" set netns "${clientpid}"
	#iw phy "phy${phy_num}" set netns name "${CONTAINER_NAME}"
done
